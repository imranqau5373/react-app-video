{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["module","exports","otCore","otCoreOptions","credentials","apiKey","config","sessionId","token","streamContainers","pubSub","type","data","stream","publisher","camera","screen","subscriber","controlsContainer","packages","communication","callProperties","textChat","name","Math","random","waitingMessage","container","screenSharing","extensionID","annotation","externalWindow","dev","screenProperties","insertMode","width","height","showControls","style","buttonDisplayMode","videoSource","fitMode","absoluteParent","App","props","state","connected","active","publishers","subscribers","meta","localAudioEnabled","localVideoEnabled","startCall","bind","endCall","toggleLocalAudio","toggleLocalVideo","AccCore","connect","then","setState","forEach","event","on","catch","error","console","log","this","start","sharingScreen","viewingSharedScreen","activeCameraSubscribers","activeCameraSubscribersGt2","activeCameraSubscribersOdd","screenshareActive","controlClass","classNames","hidden","localAudioClass","muted","localVideoClass","localCallClass","cameraPublisherClass","small","left","screenPublisherClass","cameraSubscriberClass","screenSubscriberClass","containerClasses","className","src","logo","alt","onClick","id","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.673ec075.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5cac23da.svg\";","/* Let CRA handle linting for sample app */\r\nimport React, { Component } from 'react';\r\nimport Spinner from 'react-spinner';\r\nimport classNames from 'classnames';\r\n\r\nimport AccCore from 'opentok-accelerator-core';\r\nimport 'opentok-solutions-css';\r\n\r\nimport logo from './logo.svg';\r\nimport config from './config.json';\r\nimport './App.css';\r\n\r\nlet otCore;\r\nconst otCoreOptions = {\r\n  credentials: {\r\n    apiKey: config.apiKey,\r\n    sessionId: config.sessionId,\r\n    token: config.token,\r\n  },\r\n  // A container can either be a query selector or an HTML Element\r\n  streamContainers(pubSub, type, data, stream) {\r\n    return {\r\n      publisher: {\r\n        camera: '#cameraPublisherContainer',\r\n        screen: '#screenPublisherContainer',\r\n      },\r\n      subscriber: {\r\n        camera: '#cameraSubscriberContainer',\r\n        screen: '#screenSubscriberContainer',\r\n      },\r\n    }[pubSub][type];\r\n  },\r\n  controlsContainer: '#controls',\r\n  packages: ['textChat', 'screenSharing', 'annotation'],\r\n  communication: {\r\n    callProperties: null, // Using default\r\n  },\r\n  textChat: {\r\n    name: ['David', 'Paul', 'Emma', 'George', 'Amanda'][Math.random() * 5 | 0], // eslint-disable-line no-bitwise\r\n    waitingMessage: 'Messages will be delivered when other users arrive',\r\n    container: '#chat',\r\n  },\r\n  screenSharing: {\r\n    extensionID: 'plocfffmbcclpdifaikiikgplfnepkpo',\r\n    annotation: true,\r\n    externalWindow: false,\r\n    dev: true,\r\n    screenProperties: {\r\n      insertMode: 'append',\r\n      width: '100%',\r\n      height: '100%',\r\n      showControls: false,\r\n      style: {\r\n        buttonDisplayMode: 'off',\r\n      },\r\n      videoSource: 'window',\r\n      fitMode: 'contain' // Using default\r\n    },\r\n  },\r\n  annotation: {\r\n    absoluteParent: {\r\n      publisher: '.App-video-container',\r\n      subscriber: '.App-video-container'\r\n    }\r\n  },\r\n};\r\n\r\n/**\r\n * Build classes for container elements based on state\r\n * @param {Object} state\r\n */\r\nconst containerClasses = (state) => {\r\n  const { active, meta, localAudioEnabled, localVideoEnabled } = state;\r\n  const sharingScreen = meta ? !!meta.publisher.screen : false;\r\n  const viewingSharedScreen = meta ? meta.subscriber.screen : false;\r\n  const activeCameraSubscribers = meta ? meta.subscriber.camera : 0;\r\n  const activeCameraSubscribersGt2 = activeCameraSubscribers > 2;\r\n  const activeCameraSubscribersOdd = activeCameraSubscribers % 2;\r\n  const screenshareActive = viewingSharedScreen || sharingScreen;\r\n  return {\r\n    controlClass: classNames('App-control-container', { hidden: !active }),\r\n    localAudioClass: classNames('ots-video-control circle audio', { hidden: !active, muted: !localAudioEnabled }),\r\n    localVideoClass: classNames('ots-video-control circle video', { hidden: !active, muted: !localVideoEnabled }),\r\n    localCallClass: classNames('ots-video-control circle end-call', { hidden: !active }),\r\n    cameraPublisherClass: classNames('video-container', { hidden: !active, small: !!activeCameraSubscribers || screenshareActive, left: screenshareActive }),\r\n    screenPublisherClass: classNames('video-container', { hidden: !active || !sharingScreen }),\r\n    cameraSubscriberClass: classNames('video-container', { hidden: !active || !activeCameraSubscribers },\r\n      { 'active-gt2': activeCameraSubscribersGt2 && !screenshareActive },\r\n      { 'active-odd': activeCameraSubscribersOdd && !screenshareActive },\r\n      { small: screenshareActive }\r\n    ),\r\n    screenSubscriberClass: classNames('video-container', { hidden: !viewingSharedScreen || !active }),\r\n  };\r\n};\r\n\r\nconst connectingMask = () =>\r\n  <div className=\"App-mask\">\r\n    <Spinner />\r\n    <div className=\"message with-spinner\">Connecting</div>\r\n  </div>;\r\n\r\nconst startCallMask = start =>\r\n  <div className=\"App-mask\">\r\n    <button className=\"message button clickable\" onClick={start}>Click to Start Call </button>\r\n  </div>;\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connected: false,\r\n      active: false,\r\n      publishers: null,\r\n      subscribers: null,\r\n      meta: null,\r\n      localAudioEnabled: true,\r\n      localVideoEnabled: true,\r\n    };\r\n    this.startCall = this.startCall.bind(this);\r\n    this.endCall = this.endCall.bind(this);\r\n    this.toggleLocalAudio = this.toggleLocalAudio.bind(this);\r\n    this.toggleLocalVideo = this.toggleLocalVideo.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    otCore = new AccCore(otCoreOptions);\r\n    otCore.connect().then(() => this.setState({ connected: true }));\r\n    const events = [\r\n      'subscribeToCamera',\r\n      'unsubscribeFromCamera',\r\n      'subscribeToScreen',\r\n      'unsubscribeFromScreen',\r\n      'startScreenShare',\r\n      'endScreenShare',\r\n    ];\r\n\r\n    events.forEach(event => otCore.on(event, ({ publishers, subscribers, meta }) => {\r\n      this.setState({ publishers, subscribers, meta });\r\n    }));\r\n  }\r\n\r\n  startCall() {\r\n    otCore.startCall()\r\n      .then(({ publishers, subscribers, meta }) => {\r\n        this.setState({ publishers, subscribers, meta, active: true });\r\n      }).catch(error => console.log(error));\r\n  }\r\n\r\n  endCall() {\r\n    otCore.endCall();\r\n    this.setState({ active: false });\r\n  }\r\n\r\n  toggleLocalAudio() {\r\n    otCore.toggleLocalAudio(!this.state.localAudioEnabled);\r\n    this.setState({ localAudioEnabled: !this.state.localAudioEnabled });\r\n  }\r\n\r\n  toggleLocalVideo() {\r\n    otCore.toggleLocalVideo(!this.state.localVideoEnabled);\r\n    this.setState({ localVideoEnabled: !this.state.localVideoEnabled });\r\n  }\r\n\r\n  render() {\r\n    const { connected, active } = this.state;\r\n    const {\r\n      localAudioClass,\r\n      localVideoClass,\r\n      localCallClass,\r\n      controlClass,\r\n      cameraPublisherClass,\r\n      screenPublisherClass,\r\n      cameraSubscriberClass,\r\n      screenSubscriberClass,\r\n    } = containerClasses(this.state);\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1>OpenTok Accelerator Core</h1>\r\n        </div>\r\n        <div className=\"App-main\">\r\n          <div className=\"App-video-container\">\r\n            { !connected && connectingMask() }\r\n            { connected && !active && startCallMask(this.startCall)}\r\n            <div id=\"cameraPublisherContainer\" className={cameraPublisherClass} />\r\n            <div id=\"screenPublisherContainer\" className={screenPublisherClass} />\r\n            <div id=\"cameraSubscriberContainer\" className={cameraSubscriberClass} />\r\n            <div id=\"screenSubscriberContainer\" className={screenSubscriberClass} />\r\n          </div>\r\n          <div id=\"controls\" className={controlClass}>\r\n            <div className={localAudioClass} onClick={this.toggleLocalAudio} />\r\n            <div className={localVideoClass} onClick={this.toggleLocalVideo} />\r\n            <div className={localCallClass} onClick={this.endCall} />\r\n          </div>\r\n          <div id=\"chat\" className=\"App-chat-container\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}